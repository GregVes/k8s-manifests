# Default values for matrix.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

#server
server:
  host: neukolln-matrix-dev.com
  appName: matrix-synapse
  configVolume: matrix-synapse-config
  configMap: server-config
  selector: matrix-synapse
  secretVolume: matrix-synapse-config-secret-volume
  secretName: matrix-synapse-secret
  mediaStoreVolume: matrix-synapse-mediastore
  pvc: matrix-synapse-pvc
  storageClass: openebs-jiva-csi-sc
  storageSize: 10Gi
  ingress:
    name: matrix-synapse-ingress
  service:
    name: matrix-synapse-service
    type: ClusterIP
    port: 80
    targetPort: 8008


# db
postgres:
  appName: matrix-postgres
  volume: matrix-postgres-volume
  selector: matrix-postgres
  pvc: matrix-postgres-pvc
  storageClass: openebs-jiva-csi-sc
  storageSize: 20Gi
  config: matrix-postgres-db-script
  configMap: synapse-db-create
  secretName: matrix-postgres-secret
  sqlScript: |
    CREATE DATABASE "synapse-dev" ENCODING 'UTF8' LC_COLLATE='C' LC_CTYPE='C' template=template0 OWNER synapse;
    GRANT ALL PRIVILEGES ON DATABASE "synapse-dev" TO synapse;

  service:
    name: matrix-postgres-service
    type: ClusterIP
    port: 5432

# daily backups up db to s3
cronjob:
  appName: matrix-postgres-cronjob
  secretName: cronjob-secret